/*** Generated by streamline --lines-mark 0.1.11 - DO NOT EDIT ***/

var __global = typeof global !== 'undefined' ? global : window;
function __cb(_, fn) { var ctx = __global.__context; return function(err, result) { __global.__context = ctx; if (err) return _(err); return fn(null, result); } }
function __future(fn, args, i) { if (!fn) throw new Error("anonymous function requires callback"); var done, err, result; var cb = function(e, r) { done = true; err = e, result = r; }; args = Array.prototype.slice.call(args); args[i] = function(e, r) { cb(e, r); }; fn.apply(this, args); return function(_) { if (typeof _ !== "function") throw new Error("future requires callback"); if (done) _.call(this, err, result); else cb = _.bind(this); }.bind(this); }
function __propagate(_, err) { try { _(err); } catch (ex) { __trap(ex); } }
function __trap(err) { if (err) { if (__global.__context && __global.__context.errorHandler) __global.__context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } }
/*     1 */ var json = require("./");
/*     2 */ var should = require("should");
/*     9 */ var TEST_CASES = {
/*    11 */   "Non-existent": {
/*    12 */     url: "http://i.certainly.dont.exist.example.com",
/*    13 */     err: /ENOTFOUND/
              },
/*    16 */   "Non-200": {
/*    17 */     url: "http://json.org/404",
/*    18 */     err: /404/
              },
/*    21 */   "Non-JSON": {
/*    22 */     url: "http://example.com/",
/*    23 */     err: /SyntaxError/
              },
/*    34 */   Flickr: {
/*    35 */     url: "http://www.flickr.com/services/rest/?method=flickr.test.echo&format=json&api_key=fe492f862a480692bb7905def6c9e2ca&nojsoncallback=1",
/*    36 */     exp: {
/*    37 */       method: {
/*    38 */         _content: "flickr.test.echo"
                  },
/*    40 */       format: {
/*    41 */         _content: "json"
                  },
/*    43 */       api_key: {
/*    44 */         _content: "fe492f862a480692bb7905def6c9e2ca"
                  },
/*    46 */       nojsoncallback: {
/*    47 */         _content: "1"
                  },
/*    49 */       stat: "ok"
                }
              },
/*    54 */   Twitter: {
/*    55 */     url: "https://api.twitter.com/1/statuses/show/20.json"
              },
/*    60 */   "Zoom.it": {
/*    61 */     url: "http://api.zoom.it/v1/content/h",
/*    62 */     exp: {
/*    63 */       id: "h",
/*    64 */       url: "http://upload.wikimedia.org/wikipedia/commons/3/36/SeattleI5Skyline.jpg",
/*    65 */       ready: true,
/*    66 */       failed: false,
/*    67 */       progress: 1,
/*    68 */       shareUrl: "http://zoom.it/h",
/*    69 */       embedHtml: "<script src=\"http://zoom.it/h.js?width=auto&height=400px\"></script>",
/*    70 */       dzi: {
/*    71 */         url: "http://cache.zoom.it/content/h.dzi",
/*    72 */         width: 4013,
/*    73 */         height: 2405,
/*    74 */         tileSize: 254,
/*    75 */         tileOverlap: 1,
/*    76 */         tileFormat: "jpg"
                  }
                }
              }
            };
/*    83 */ var started = 0, finished = 0;
/*    86 */ process.on("exit", function __1() {
/*    87 */   var remaining = (started - finished);
/*    88 */   remaining.should.equal(0, (remaining + " callbacks never fired!"));
            });
/*    98 */ function test(name, data, _) {
              if (!_) {
                return __future(test, arguments, 2);
              }
            ;
              var __ = _;
/*    99 */   var act, err;
/*   101 */   started++;
              return function(__) {
                return function(_) {
                  try {
/*   104 */         return json.get(data.url, __cb(_, function(__0, __1) {
/*   104 */           act = __1;
                      return __();
                    }));
                  } catch (e) {
                    return __propagate(_, e);
                  };
                }(function(e, __result) {
                  try {
                    if (e) {
/*   106 */           err = e;
                    }
                     else return _(null, __result)
                  ;
                  } catch (e) {
                    return __propagate(_, e);
                  };
                  return __();
                });
              }(function() {
                try {
/*   109 */       finished++;
/*   111 */       if (data.err) {
/*   112 */         should.exist(err, ((name + " expected error, received result: ") + act));
/*   113 */         err.should.match(data.err, ((((name + " error doesn't match expected: ") + err) + " vs. ") + data.err));
/*   114 */         should.not.exist(act, ((name + " received error *and* result: ") + act));
                    return _(null);
                  }
                ;
/*   118 */       should.not.exist(err, ((name + " threw error: ") + err));
/*   119 */       should.exist(act, (name + " received neither error nor result"));
/*   121 */       act.should.be.a("object", ((name + " returned content is not an object or array: ") + act));
/*   123 */       if (data.exp) {
/*   124 */         act.should.match(data.exp, ((((name + " content doesn't match expected: ") + act) + " vs. ") + data.exp));
                  }
                ;
                  return __();
                } catch (e) {
                  return __propagate(_, e);
                };
              });
            };
/*   128 */ for (var name in TEST_CASES) {
/*   129 */   test(name, TEST_CASES[name]);
            };
